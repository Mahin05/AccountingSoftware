@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Master LC";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
    var Id = ViewBag.Id as string;
    var actiontype = ViewBag.ActionType as string;
}
<link href="~/css/accountHeadListGearDropdown.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

<style>
    .tabulator {
        border: none;
    }

    .tabulator-col .tabulator-col-title {
        text-align: center;
    }

    .tabulator-tableholder {
        background-color: white;
    }

    .tabulator[tabulator-layout=fitDataTable] {
        display: inherit;
    }

    .tabulator .tabulator-header .tabulator-col, .tabulator .tabulator-header {
        background-color: white;
        border-right: 1px solid #dee2e6;
    }

    .tabulator-row .tabulator-cell.tabulator-frozen.tabulator-frozen-left {
        border-right: 2px solid #aaaaaa38;
    }

    .tabulator-row .tabulator-cell {
        border-right: 1px solid #aaaaaa38;
        border-left: 1px solid #aaaaaa38;
    }

    .tabulator-cell {
        padding-top: 10px;
        padding-bottom: 10px;
    }

    .tabulator .tabulator-row .active-cell {
        overflow: visible;
    }

    .tabulator-row:nth-child(even) {
        background-color: white;
    }

    .tabulator-row {
        border: none;
    }
    .form-control{
        border: 1px solid #adb5bd !important;
    }

    #example-table {
        height: auto !important;
        border-bottom: 3px solid #ccc;
        margin-bottom: 10px
    }

    .bottom-bar {
        position: fixed;
        bottom: 0;
        left: 0;
        width: 100%;
        background-color: #393a3d;
        color: #fff;
        padding-top: 8px;
        padding-bottom: 8px;
        display: flex;
        justify-content: space-between;
        margin-left: 39px;
    }
</style>


<div >
    <div style="background: #F4F4F4; padding: 20px;">
        <h3 style="border-bottom: 1px solid gray">Master LC</h3>
        <input type="hidden" id="Id" value="0" />
        <div class="row">
            <div class="col-md-3 col-3">
                <label>Company</label>
                <select id="Company" class="form-control">
                    <option value="">Select Company</option>
                </select>
            </div>
            <div class="col-md-3 col-3">
                <label>Buyer Group</label>
                <select id="BuyerGroup" class="form-control">
                    <option value="">Select Buyer Group</option>
                </select>
            </div>
            <div class="col-md-3 col-3">
                <label>Buyer</label>
                <select id="Buyer" class="form-control">
                    <option value="">Select Buyer</option>
                </select>
            </div>
            <div class="col-md-3 col-3">
                <label>LC Margin</label>
                <input type="text" id="LCMargin" class="form-control" style="padding:1px;">
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-md-3 col-3">
                <label>Bank AccountNo</label>
                <select id="BankAccountNo" class="form-control">
                    <option value="">Select Account</option>
                </select>
            </div>
            <div class="col-md-3 col-3">
                <label>Concern Bank</label>
                <select id="ConcernBank" class="form-control">
                    <option value="">Select Concern Bank</option>
                </select>
            </div>
            <div class="col-md-3 col-3">
                <label>Buyer Bank</label>
                <select id="BuyerBank" class="form-control">
                    <option value="">Select Buyer Bank</option>
                </select>
            </div>
            <div class="col-md-3 col-3">
                <label>Type</label>
                <select id="LCType" class="form-control">
                    <option value="">Select Type</option>
                </select>
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-md-2 col-2">
                <label>Sales Contract No</label>
                <input type="text" id="SalesContractNo" class="form-control" style="padding:1px;">
            </div>
            <div class="col-md-3 col-3">
                <label>Manual Sales Contract Value</label>
                <input type="text" id="ManualSalesContractVal" class="form-control" style="padding:1px;">
            </div>
            <div class="col-md-2 col-2">
                <label>Manual Export LC Value</label>
                <input type="text" id="ManualExportLCVal" class="form-control" style="padding:1px;">
            </div>
            <div class="col-md-2 col-2">
                <label>Sales Contract Issue Date</label>
                <input id="ContractIssueDate" class="form-control" style="padding:1px;">
            </div>
            <div class="col-md-3 col-3">
                <label>Sales Contract Last Shipment Date</label>
                <input id="ContractLastShipmentDate" class="form-control" style="padding:1px;">
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-md-3 col-3">
                <label>Unit Name</label>
                <select id="UnitId" class="form-control">
                    <option value="">Select Unit</option>
                </select>
            </div>
            <div class="col-md-3 col-3">
                <label>Currency</label>
                <select id="CurrencyId" class="form-control">
                    <option value="">Select Currency</option>
                </select>
            </div>
            <div class="col-md-3 col-3">
                <label>Export LC No.</label>
                <input id="ExportLCNo" class="form-control" style="padding:1px;">
            </div>
            <div class="col-md-3 col-3">
                <label>Export LC Issue Date</label>
                <input id="ExportLCIssueDate" class="form-control" style="padding:1px;">
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-md-3 col-3">
                <label>Export LC/Contract Qty</label>
                <input id="ExportLCContractQty" class="form-control" style="padding:1px;">
            </div>
            <div class="col-md-3 col-3">
                <label>Export LC/Contract Value</label>
                <input id="ExportLCContractVal" class="form-control" style="padding:1px;">
            </div>
            <div class="col-md-3 col-3">
                <label>Trade Term</label>
                <select id="TradeTermId" class="form-control">
                </select>
            </div>
            <div class="col-md-3 col-3">
                <label>Port of Loading</label>
                <select id="LoadingPort" class="form-control">
                    <option value="">Select from list</option>
                </select>
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-md-3 col-3">
                <label>Port of Discharge</label>
                <select id="DischargePort" class="form-control">
                    <option value="">Select from list</option>
                </select>
            </div>
            <div class="col-md-2 col-2">
                <label>Destination</label>
                <select id="DestinationId" class="form-control">
                    <option value="">Select from list</option>
                </select>
            </div>
            <div class="col-md-2 col-2">
                <label>Ship Mode</label>
                <select id="ShipModeId" class="form-control">
                    <option value="">=N/A=</option>
                </select>
            </div>
            <div class="col-md-3 col-3">
                <label>Payment Terms</label>
                <select id="PaymentTermsId" class="form-control">
                    <option value="">Select from list</option>
                </select>
            </div>
            <div class="col-md-2 col-2">
                <label>Days</label>
                <select id="DayId" class="form-control">
                    <option value="">Select from list</option>
                </select>
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-md-1 col-1">
                <label>LC Status</label>
                <select id="LCStatusId" class="form-control">
                    <option value="">=N/A=</option>
                </select>
            </div>
            <div class="col-md-2 col-2">
                <label>Destination</label>
                <input id="Destination" class="form-control" style="padding:1px;">
            </div>
            <div class="col-md-2 col-2">
                <label>Remarks</label>
                <input id="Remarks" class="form-control" style="padding:1px;">
            </div>
            <div class="col-md-2 col-2">
                <label>File NO</label>
                <input id="FileNo" class="form-control" style="padding:1px;">
            </div>
            <div class="col-md-2 col-2">
                <label>Remaining Contract Value</label>
                <input id="RemainingContractVal" class="form-control" style="padding:1px;" value="0">
            </div>
            <div class="col-md-3 col-3">
                <label>Export LC No[Import Dept.] Rev. Amd No</label>
                <input id="ExportLCNo" class="form-control" style="padding:1px;">
            </div>
        </div>
    </div>
    
    <div id="example-table" style="margin-top: 30px;"></div>
    <div class="row" style="margin-bottom: 50px;">
        <div class="col-md-3 col-12">
            <div class="btn-group">
                <button type="button" class="btn btn-success btn-sm" id="add-row">Add Row</button>
                <button type="button" class="btn btn-danger btn-sm" id="del-row">Clear Table</button>
            </div>
        </div>
    </div>

    <div class="bottom-bar">
        <div class="container-fluid">
            <div class="row px-4">
                <div class="col-md-3">
                    <button type="button" class="btn btn-outline-secondary text-white btn-sm rounded-pill " id="BtnBack" onclick="gotoInvoiceList()">Cancel</button>
                </div>
                <div class="col-md-6 d-flex justify-content-center">
                    
                </div>

                <div class="col-md-3 d-flex justify-content-end">
                    <button class="btn btn-outline-secondary text-white btn-sm rounded-pill me-1" id="BtnSave">
                        @if (ViewBag.ActionType == "Edit")
                        {
                            <span>Update</span>
                        }
                        else if (ViewBag.ActionType == "Create")
                        {
                            <span>Save </span>
                        }

                    </button>
                    <div class="btn-group">
                        <button class="btn btn-success btn-sm" id="BtnSaveClose">
                            @if (ViewBag.ActionType == "Edit")
                            {
                                <span>Update and close</span>
                            }
                            else if (ViewBag.ActionType == "Create" || ViewBag.ActionType == "Copy")
                            {
                                <span>Save and close</span>
                            }

                        </button>
                        <button type="button" class="btn btn-success btn-sm dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
                            <span class="visually-hidden">Toggle Dropdown</span>
                        </button>
                        <ul class="dropdown-menu" id="ul-id-for-expenses">
                            <li><a class="dropdown-item" href="/Accounts/ImportTransaction">Time activity</a></li>
                        </ul>
                    </div>


                </div>
            </div>
        </div>
        <input type="button" id="unknown" class="btn  btn-md" value="" />
        <div class="dropdown" id="unknown1" style="display: inline-block;">
        </div>
    </div>
</div>


@section Scripts
{
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="~/admin_theme_gtr/assets/js/dateRangeMultipleFunctionForAccountsVoucherReport.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script type="text/javascript" src="https://oss.sheetjs.com/sheetjs/xlsx.full.min.js"></script>


    <script>
        $('#Buyer').select2();
        $('#BuyerGroup').select2();
        $('#Company').select2();
        $('#BankAccountNo').select2();
        $('#ConcernBank').select2();
        $('#BuyerBank').select2();
        $('#LCType').select2();
        $('#UnitId').select2();
        $('#CurrencyId').select2();
        $('#LoadingPort').select2();
        $('#DischargePort').select2();
        $('#DestinationId').select2();
        $('#ShipModeId').select2();
        $('#PaymentTermsId').select2();
        $('#DayId').select2();
        $('#LCStatusId').select2();
        $('#TradeTermId').select2();


        $.ajax({
            type: "GET",
            url: '@Url.Action("GetBuyers", "BuyerOrder")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    $('#Buyer').append('<option value="' + value.Id + '" data-currency-id="' + value.CustomerCurrencyId + '" >' + value.Name + '-' + value.CurrencyShortName + '</option>');
                });
            }
        });

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetComercialCompany", "BuyerOrder")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    $('#Company').append('<option value="' + value.Value + '" >' + value.Text + '</option>');
                });
            }
        });

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetBuyerGroup", "BuyerOrder")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    $('#BuyerGroup').append('<option value="' + value.Value + '" >' + value.Text + '</option>');
                });
            }
        });

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetBankAccountNo", "BuyerOrder")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    $('#BankAccountNo').append('<option value="' + value.Value + '" >' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetConcernBank", "BuyerOrder")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    $('#ConcernBank').append('<option value="' + value.Value + '" >' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetBuyerBank", "BuyerOrder")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    $('#BuyerBank').append('<option value="' + value.Value + '" >' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetLCType", "BuyerOrder")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    $('#LCType').append('<option value="' + value.Value + '" >' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetUnit", "BuyerOrder")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    $('#UnitId').append('<option value="' + value.Value + '" >' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetCurrencies", "BuyerOrder")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    $('#CurrencyId').append('<option value="' + value.Value + '" >' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetTradeTerm", "BuyerOrder")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    $('#TradeTermId').append('<option value="' + value.Value + '" >' + value.Text + '</option>');
                });
            }
        });

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetLoadingPort", "BuyerOrder")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    $('#LoadingPort').append('<option value="' + value.Value + '" >' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetDischargePort", "BuyerOrder")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    $('#DischargePort').append('<option value="' + value.Value + '" >' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetDestination", "BuyerOrder")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    $('#DestinationId').append('<option value="' + value.Value + '" >' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetShipMode", "BuyerOrder")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    $('#ShipModeId').append('<option value="' + value.Value + '" >' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetPaymentTerms", "BuyerOrder")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    $('#PaymentTermsId').append('<option value="' + value.Value + '" >' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetDaylist", "BuyerOrder")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    $('#DayId').append('<option value="' + value.Value + '" >' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetLCStatus", "BuyerOrder")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    $('#LCStatusId').append('<option value="' + value.Value + '" >' + value.Text + '</option>');
                });
            }
        });
    </script>


    <script>
        $(document).ready(function () {
            $(function () {
                $("#ContractIssueDate").removeClass("hasDatepicker").datepicker({
                    dateFormat: "dd-M-yy"
                });
                $("#ContractLastShipmentDate").removeClass("hasDatepicker").datepicker({
                    dateFormat: "dd-M-yy"
                });
                $("#ExportLCIssueDate").removeClass("hasDatepicker").datepicker({
                    dateFormat: "dd-M-yy"
                });
            });
        });
        function buyerPOEditor(cell, onRendered, success, cancel, editorParams) {
            var editor = document.createElement("select");
            editor.setAttribute("class", "select2");
            editor.style.width = "100%";

            onRendered(function () {
                $(editor).select2({
                    closeOnSelect: false,
                    ajax: {
                        url: '@Url.Action("GetBuyerPOSearchList", "BuyerOrder")',
                        dataType: 'json',
                        data: function (params) {
                            return {
                                dropdownSearch: params.term,
                                pageNo: params.page || 1
                            };
                        },
                        processResults: function (data) {
                            var options = data.BuyerPOList.map(function (item) {
                                return {
                                    id: item.Id,
                                    text: item.BuyerPO,
                                    StyleName: item.StyleName,
                                    UnitPrice: item.UnitPrice,
                                    TotalValue: item.TotalValue,
                                    OrderQty: item.OrderQty
                                };
                            });
                            return { results: options };
                        },
                        cache: false
                    }
                });
                editor.style.css = "100%";
                $(editor).select2('open');
            });

            function successFunc(e) {
                var data = e.params.data;
                cell.getRow().update({
                    "BuyerPOId": data.id,
                    "BuyerPO": data.text,
                    "ExportPONo": data.text,
                    "UnitPrice": data.UnitPrice,
                    "TotalValue": data.TotalValue,
                    "StyleName": data.StyleName,
                    "OrderQty": data.OrderQty,
                });
                success(data.text);
                $(editor).select2('close');
            }

            function DestroyFunc() {
                cancel();
                cell.navigateRight();
            }

            $(editor).on("select2:select", successFunc);
            $(editor).on("select2:close", DestroyFunc);

            return editor;
        }



        var selectOptions = @Html.Raw(Json.Serialize(ViewBag.BuyerPOList));


        var columns = [
            {
                headerSort: false,
                field: "drag",
                frozen: true,
                formatter: function (cell, formatterParams) {
                    return "<i class='fas fa-bars drag-icon'></i>";
                },
                width: 30,
                headerSort: false,
                rowHandle: true,


            },
            { title: "Id", field: "Id", movable: false, headerSort: false, visible: false },
            { title: "BuyerPOId", field: "BuyerPOId", movable: false, headerSort: false, visible: false },
            { title: "SL.", field: "SLNo", headerSort: false, frozen: true, width: 5, bottomCalc: "count", hozAlign: "right" },
            {
                title: "Buyer PO",
                field: "BuyerPO",
                width: 200,
                hozAlign: "center",
                sorter: "number",
                editor: buyerPOEditor,
                cellEdited: function (cell) {
                    var rowData = cell.getRow().getData();
                    if (rowData.ShipmentDate === undefined) {
                        rowData.ShipmentDate = moment().format('DD-MMM-YYYY');
                        cell.getRow().update({ ShipmentDate: rowData.ShipmentDate });
                    }
                    if (rowData.ContractDate === undefined) {
                        rowData.ContractDate = moment().format('DD-MMM-YYYY');
                        cell.getRow().update({ ContractDate: rowData.ContractDate });
                    }
                    var selectedText = cell.getValue();
                    var selectedValue = selectOptions.find(option => option.Text === selectedText);
                    if (selectedValue) {
                        var BuyerPOId = selectedValue.Value;
                        getBuyerPODetails(BuyerPOId, function (exportpono, buyerpoId, unitPrice, orderQty, totalValue, stylename) {
                            cell.getRow().update({
                                "ExportPONo": exportpono,
                                "StyleName": stylename,
                                "BuyerPOId": buyerpoId,
                                "UnitPrice": unitPrice,
                                "OrderQty": orderQty,
                                "TotalValue": totalValue
                            });
                        });
                    }
                },
            },
            { title: "Buyer/Export PO No.", field: "ExportPONo", editor: "input" },
            { title: "Style Name", field: "StyleName", editor: "input" },
            { title: "Item Name", field: "ItemName", editor: "input" },
            { title: "HSCode", field: "HSCode", editor: "input" },
            { title: "Fabrication", field: "Fabrication", editor: "input" },
            { title: "Order Qty", field: "OrderQty", editor: "input" },
            { title: "Factor", field: "Factor", editor: "input" },
            { title: "Qty In Pcs", field: "QtyInPcs", editor: "input" },
            { title: "Unit Price", field: "UnitPrice", editor: "input" },
            { title: "Total Value", field: "TotalValue", editor: "input" },
            { title: "Shipment Date", field: "ShipmentDate", editor: "input" ,
                editorParams: {
                    dateFormat: "d-M-Y",
                },
                cellEdited: function (cell) {
                    cell.getRow().update({ "ShipmentDate": cell.getValue() });
                },
                editor: function (cell, onRendered, success, cancel, editorParams) {
                    var input = document.createElement("input");
                    input.type = "text";
                    input.style.width = "100%";
                    input.value = cell.getValue() || "";

                    var flatpickrInstance = flatpickr(input, editorParams);

                    flatpickrInstance.config.onClose.push(function (selectedDates, dateStr) {
                        cell.setValue(dateStr);
                        success(dateStr);
                    });

                    onRendered(function () {
                        input.focus();
                    });

                    return input;
                },
            },
            { title: "Destination", field: "Destination", editor: "input" },
            { title: "Contract No", field: "ContractNo", editor: "input" },
            { title: "Order Type", field: "OrderType", editor: "input" },
            // { title: "Is Transaction", 
            //     field: "isTransaction",
            //     hozAlign: "center",
            //     editor: "tickCross",  
            //     editorParams: {
            //         tristate: true, 
            //     },
            //     formatter: "tickCross", 
            //     formatterParams: {
            //         allowEmpty: true,  
            //     },
            // },
            { title: "Cat No", field: "CatNo", editor: "input" },
            { title: "Delivery No", field: "DeliveryNo", editor: "input" },
            { title: "Destination PO", field: "DestinationPO", editor: "input" },
            { title: "Kimball", field: "Kimball", editor: "input" },
            { title: "Color Code", field: "ColorCode", editor: "input" },
            { title: "Contract Date", field: "ContractDate", editor: "input",
                editorParams: {
                    dateFormat: "d-M-Y", 
                },
                cellEdited: function (cell) {
                    cell.getRow().update({ "ContractDate": cell.getValue() });
                },
                editor: function (cell, onRendered, success, cancel, editorParams) {
                    var input = document.createElement("input");
                    input.type = "text";
                    input.style.width = "100%";
                    input.value = cell.getValue() || ""; 

                    var flatpickrInstance = flatpickr(input, editorParams);

                    flatpickrInstance.config.onClose.push(function (selectedDates, dateStr) {
                        cell.setValue(dateStr);
                        success(dateStr);
                    });

                    onRendered(function () {
                        input.focus();
                    });

                    return input;
                },
            },
        ];

        var deleteColumn = {
            title: "",
            field: "Delete",
            movable: false,
            formatter: function (cell, formatterParams) {
                return "<i class='fas fa-trash-alt delete-icon'></i>";
            },
            width: 30,
            headerSort: false,
            cellClick: function (e, cell) {
                var rowData = cell.getRow().getData();
                var row = cell.getRow();
                deleteRow(row);
            }
        };

        columns.push(deleteColumn);

        var table = new Tabulator("#example-table", {
            height: "311px",
            //layout: "fitColumns",
            addRowPos: "bottom",
            columns: columns,
        });

        function deleteRow(row) {
            
            if (confirm("Are you sure you want to delete this row?")) {
                table.deleteRow(row);
                renumberRows();
            }

        }
        function renumberRows() {
            var rows = table.getRows();
            rows.forEach(function (row, index) {
                row.update({ SLNo: index + 1 });
            });
        }
        document.getElementById("add-row").addEventListener("click", function () {
            table.addRow({});
            renumberRows();
        });

        document.getElementById("del-row").addEventListener("click", function () {
            table.clearData();
            renumberRows();
        });

        function getBuyerPODetails(BuyerPOId, callback) {
            $.ajax({
                type: "get",
                url: '@Url.Action("GetBuyerPODetails", "BuyerOrder")',
                data: { BuyerPOId: BuyerPOId },

                success: function (response) {
                    
                    var result = response.data;
                    var exportpono = result.BuyerPO;
                    var buyerpoId = result.Id;
                    var unitPrice = result.UnitPrice;
                    var orderQty = result.TotalQuantity;
                    var totalValue = result.TotalAmount;
                    var stylename = result.Style.StyleNo;

                    callback(exportpono, buyerpoId, unitPrice, orderQty, totalValue, stylename);
                },
                error: function (error) {
                    console.error("Error fetching price:", error);
                }
            });
        }


        function gatherData() {

            var dataList = [];
            var ComId = '@HttpContextAccessor.HttpContext.Session.GetInt32("ComId").ToString()';
            var rows = table.getData();
            var id = @ViewBag.Id;
            rows.forEach(function (row) {
                var rowData = {
                    "Id": row["Id"] == null ? 0 : parseInt(row["Id"]),
                    "ExportPONo": row.ExportPONo,
                    "BuyerPOId": row.BuyerPOId,
                    "StyleName": row.StyleName,
                    "ItemName": row.ItemName,
                    "HSCode": row.HSCode,
                    "Fabrication": row.Fabrication,
                    "OrderQty": parseFloat(row.OrderQty),
                    "Factor": parseFloat(row.Factor),
                    "QtyInPcs": parseFloat(row.QtyInPcs),
                    "UnitPrice": parseFloat(row.UnitPrice),
                    "TotalValue": parseFloat(row.TotalValue),
                    "ShipmentDate": new Date(row.ShipmentDate),
                    "Destination": row.Destination,
                    "ContractNo": row.ContractNo,
                    "OrderType": row.OrderType,
                    "CatNo": row.CatNo,
                    "DeliveryNo": row.DeliveryNo,
                    "DestinationPO": row.DestinationPO,
                    "Kimball": row.Kimball,
                    "ColorCode": row.ColorCode,
                    "ContractDate": new Date(row.ContractDate),
                    "MasterLCId": id,
                    "ComId": ComId
                };
                dataList.push(rowData);
            });


            var masterLCData = {
                Id: id,
                CommercialCompanyId: $("#Company").val(),
                BuyerGroupID: $("#BuyerGroup").val(),
                BuyerID: $("#Buyer").val(),
                LCMargin: parseFloat($("#LCMargin").val()),
                BankAccountId: $("#BankAccountNo").val(),
                OpeningBankId: $("#ConcernBank").val(),
                LienBankId: $("#BuyerBank").val(),
                LCTypeId: $("#LCType").val(),
                LCRefNo: $("#SalesContractNo").val(),
                MasterLCValueManual: $("#ManualSalesContractVal").val(),
                ExportLCValueManual: $("#ManualExportLCVal").val(),
                SalesContractIssueDate: new Date($("#ContractIssueDate").val()),
                LCExpirydate: new Date($("#ContractLastShipmentDate").val()),
                unitId: $("#UnitId").val(),
                CurrencyId: $("#CurrencyId").val(),
                BuyerLCRef: $("#ExportLCNo").val(),
                LCOpenDate: new Date($("#ExportLCIssueDate").val()),
                TotalLCQty: parseFloat($("#ExportLCContractQty").val()),
                LCValue: parseFloat($("#ExportLCContractVal").val()),
                TradeTermId: $("#TradeTermId").val(),
                PortOfLoadingId: $("#LoadingPort").val(),
                PortOfDischargeId: $("#DischargePort").val(),
                DestinationId: $("#DestinationId").val(),
                ShipModeId: $("#ShipModeId").val(),
                PaymentTermsId: $("#PaymentTermsId").val(),
                DayListId: $("#DayId").val(),
                LCStatusId: $("#LCStatusId").val(),
                DestinationContract: $("#Destination").val(),
                Remarks: $("#Remarks").val(),
                FileNo: $("#FileNo").val(),
                LCNOforImport: parseFloat($("#RemainingContractVal").val()),
                COM_MasterLC_Details: dataList

            }

            return masterLCData;
            
        }

        function sendDataToServer() {
            var lcData = gatherData();

            var data = JSON.stringify(lcData);


            $.ajax({

                url: '@Url.Action("MasterLCCreation", "BuyerOrder")',
                type: 'POST',
                data: data,
                async: false,
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                success: function (response) {
                    toastr.success(response.message, "", {
                        "toastClass": "toast-green",
                    });
                    setTimeout(function () {
                        window.location.href = '@Url.Action("Export", "BuyerOrder")';
                    }, 1000);
                },
                error: function (error) {
                    console.log("Error");
                }
            });
                        
        }

        var saveButton = document.getElementById('BtnSave');
        saveButton.addEventListener('click', function () {
            sendDataToServer();
        });

        var saveButton = document.getElementById('BtnSaveClose');
        saveButton.addEventListener('click', function () {
            sendDataToServer();
        });

        function formatDateToCustomString(inputDate) {
            const months = [
                "Jan", "Feb", "Mar", "Apr", "May", "Jun",
                "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
            ];

            if (inputDate instanceof Date && !isNaN(inputDate)) {
                const day = inputDate.getDate();
                const monthIndex = inputDate.getMonth();
                const year = inputDate.getFullYear();
                const formattedDay = day < 10 ? `0${day}` : day;

                const formattedDate = `${formattedDay}-${months[monthIndex]}-${year}`;
                return formattedDate;
            } else {
                return inputDate;
            }
        }

        if ('@actiontype' === "Edit") {
            $("#invoice-no").prop("disabled", false)
            var id = @ViewBag.Id;
            console.log(id);

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetMasterLCDetails", "BuyerOrder")',
                data: { id: id },
                dataType: "json",
                success: function (response) {
                    console.log(response.data);
                    var model = response.data;
                    
                    $("#Id").val(model.Id);
                    $("#Company").val(model.CommercialCompanyId).trigger('change');
                    $("#BuyerGroup").val(model.BuyerGroupID).trigger('change');
                    $("#Buyer").val(model.BuyerID).trigger('change');
                    $("#LCMargin").val(model.LCMargin);
                    $("#BankAccountNo").val(model.BankAccountId).trigger('change');
                    $("#ConcernBank").val(model.OpeningBankId).trigger('change');
                    $("#BuyerBank").val(model.LienBankId).trigger('change');
                    $("#LCType").val(model.LCTypeId).trigger('change');
                    $("#SalesContractNo").val(model.LCRefNo);
                    $("#ManualSalesContractVal").val(model.MasterLCValueManual);
                    $("#ManualExportLCVal").val(model.ExportLCValueManual);
                    $("#ContractIssueDate").val(formatDateToCustomString(new Date(model.SalesContractIssueDate)));
                    $("#ContractLastShipmentDate").val(formatDateToCustomString(new Date(model.LCExpirydate)));
                    $("#UnitId").val(model.unitId).trigger('change');
                    $("#CurrencyId").val(model.CurrencyId).trigger('change');
                    $("#ExportLCNo").val(model.BuyerLCRef);
                    $("#ExportLCIssueDate").val(formatDateToCustomString(new Date(model.LCOpenDate)));
                    $("#ExportLCContractQty").val(model.TotalLCQty);
                    $("#ExportLCContractVal").val(model.LCValue);
                    $("#TradeTermId").val(model.TradeTermId).trigger('change');
                    $("#LoadingPort").val(model.PortOfLoadingId).trigger('change');
                    $("#DischargePort").val(model.PortOfDischargeId).trigger('change');
                    $("#DestinationId").val(model.DestinationId).trigger('change');
                    $("#ShipModeId").val(model.ShipModeId).trigger('change');
                    $("#PaymentTermsId").val(model.PaymentTermsId).trigger('change');
                    $("#DayId").val(model.DayListId).trigger('change');
                    $("#LCStatusId").val(model.LCStatusId).trigger('change');
                    $("#Destination").val(model.DestinationContract);
                    $("#Remarks").val(model.Remarks);
                    $("#FileNo").val(model.FileNo);
                    $("#RemainingContractVal").val(model.LCNOforImport);

                    initializeTabulator(model.COM_MasterLC_Details);
                   
                },
                error: function (error) {
                    console.error("Error fetching data: " + error);
                }
            });
        }

        function initializeTabulator(data) {
            if (table) {
                data.forEach(function (row, index) {
                    var dateObj = new Date(row.ContractDate);
                    var dateObj1 = new Date(row.ShipmentDate);

                    row.ContractDate = dateObj.getDate() + '-' +
                        new Intl.DateTimeFormat('en-us', { month: 'short' }).format(dateObj) + '-' +
                        dateObj.getFullYear();

                    row.ShipmentDate = dateObj1.getDate() + '-' +
                        new Intl.DateTimeFormat('en-us', { month: 'short' }).format(dateObj1) + '-' +
                        dateObj1.getFullYear();

                    row.SLNo = index + 1;
                });
                table.setData(data);
            } else {
                table = new Tabulator("#example-table", {
                    height: "311px",
                    layout: "fitColumns",
                    addRowPos: "bottom",
                    columns: columns,
                    data: data,
                });
            }
        }


    </script>
    
    
}